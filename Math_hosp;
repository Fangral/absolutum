unit Prog_Unit1;
interface
uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, Grids, StdCtrls, Buttons, ComObj, math,
  ExtCtrls, XPMan;

type
  TForm1 = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    StringGrid1: TStringGrid;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    OpenDialog1: TOpenDialog;
    TabSheet2: TTabSheet;
    StringGrid2: TStringGrid;
    StringGrid3: TStringGrid;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    TabSheet3: TTabSheet;
    StringGrid4: TStringGrid;
    Button1: TButton;
    Button2: TButton;
    XPManifest1: TXPManifest;
    Button3: TButton;
    Button4: TButton;
    StringGrid5: TStringGrid;
    Button5: TButton;
    Button6: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    StringGrid6: TStringGrid;
    Button7: TButton;
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}





procedure DeleteRowQ(ARowIndex: Integer; AGrid: TStringGrid);
var
  i, j: Integer;
begin
  with AGrid do
  begin
    if (ARowIndex = RowCount) then
      RowCount := RowCount - 1
    else
    begin
      for i := ARowIndex to RowCount do
        for j := 0 to ColCount do
          Cells[j, i] := Cells[j, i + 1];

      RowCount := RowCount - 1;
    end;
  end;
end;


procedure ClearTable;
var i, j: Integer; begin
with form1.StringGrid3 do
  for i:=FixedCols to ColCount-1 do
  for j:=FixedRows to RowCount-1 do
    Cells[i, j]:='';
end;



procedure Xls_Open(XLSFile:string; Grid:TStringGrid);
 const
  xlCellTypeLastCell = $0000000B;
var
  ExlApp, Sheet: OLEVariant;
  i, j, r, c:integer;

begin
  //создаем объект Excel
  ExlApp := CreateOleObject('Excel.Application');
  //делаем окно Excel невидимым
  ExlApp.Visible := false;
  //открываем файл XLSFile
  ExlApp.Workbooks.Open(XLSFile);
  //создаем объект Sheet(страница) и указываем номер листа (1)
  //в книге, с которого будем осуществлять чтение
  Sheet := ExlApp.Workbooks[ExtractFileName(XLSFile)].WorkSheets[1];
  //активируем последнюю ячейку на листе
  Sheet.Cells.SpecialCells(xlCellTypeLastCell, EmptyParam).Activate;
    // Возвращает номер последней строки
    r := ExlApp.ActiveCell.Row;
    // Возвращает номер последнего столбца
    c := ExlApp.ActiveCell.Column;
    //устанавливаем кол-во столбцов и строк в StringGrid
    Grid.RowCount:=r;
    Grid.ColCount:=c;
    //считываем значение из каждой ячейки и копируем в нашу таблицу
     for j:= 1 to r do
       for i:= 1 to c do
         Grid.Cells[i-1,j-1]:= sheet.cells[j,i];
      //закрываем приложение Excel
 ExlApp.Quit;
 //очищаем выделенную память
 ExlApp := Unassigned;
 Sheet := Unassigned;
end;


procedure TForm1.BitBtn1Click(Sender: TObject);
begin
try
begin
ShowMessage('выберете таблицу с данными Primer1.xlsx');
If OpenDialog1.Execute then Xls_Open (OpenDialog1.FileName, StringGrid1);
form1.StringGrid1.Visible:=true;

ShowMessage('выберете таблицу с данными Primer2.xlsx');
If OpenDialog1.Execute then Xls_Open (OpenDialog1.FileName, StringGrid2);
form1.StringGrid2.Visible:=true;

ShowMessage('выберете таблицу с данными Primer3.xlsx');
If OpenDialog1.Execute then Xls_Open (OpenDialog1.FileName, StringGrid5);
form1.StringGrid5.Visible:=true;

ShowMessage('Все данные успешно загружены');
end
except ShowMessage('Ошибка при загрузке данных'); exit;
end;
form1.PageControl1.SelectNextPage(True) ;
form1.Button2.Click;

end;


procedure TForm1.BitBtn2Click(Sender: TObject);
var
n,str,br,j,jj,zn,kll,kl,nl,nn:integer;
k:extended;
begin

try
begin



form1.StringGrid3.Visible:=true;
ClearTable;

form1.StringGrid3.RowCount:= form1.StringGrid1.RowCount-1;
form1.StringGrid3.ColCount:= form1.StringGrid1.ColCount;


//GLOBALID
for n:=1 to StringGrid1.RowCount  do
begin
StringGrid3.Cells[0, n-1]:= StringGrid1.Cells[0, n] ;
end;


//TIME_DIFF PREVISIL_TIME INFORMATION
for br:=21 to 23 do begin
for n:=1 to StringGrid1.RowCount  do
begin
StringGrid3.Cells[br-19, n-1]:= StringGrid1.Cells[br, n] ;
end;
end;


//PERCENT
for str:=2 to StringGrid1.RowCount-1  do
begin
k:=0;
for n:=1 to 20  do
begin
    k:=k+(StrToFloatDef(StringGrid1.Cells[n, 0],0)*StrToFloatDef(StringGrid1.Cells[n, str],0));
end;
   StringGrid3.Cells[1, str-1] := FloatToStr(k);
end;
StringGrid3.Cells[1, 0]:='PERCENT';


//кол-во попыток (5/0)
for jj:=2 to StringGrid1.RowCount do
begin
 zn:=0;
 for j:=2 to StringGrid1.RowCount do
 begin
    if form1.StringGrid1.Cells[0,jj]= form1.StringGrid1.Cells[0,j] then
    zn:=zn+1
 end;
    form1.StringGrid3.Cells[5,jj-1]:=inttostr(zn);
end;
StringGrid3.Cells[5, 0]:='POPITKI';



   //выбор последнего результата
  if form1.RadioButton1.Checked=true then
  begin

  nl:=1 ;
  for kll:=1 to StringGrid3.RowCount do
  begin
  nl:=nl+1;
  for kl:=nl to StringGrid3.RowCount do
  begin
  if form1.StringGrid3.Cells[0,kll] = form1.StringGrid3.Cells[0,kl] then begin form1.StringGrid3.Cells[7,kll]:='*';  end;
  end;
  end;

  for nn:=0 to  StringGrid3.RowCount do
  begin
    if form1.StringGrid3.Cells[7,nn]='*' then begin DeleteRowQ(nn,StringGrid3) end;
  end;
    for nn:=0 to  StringGrid3.RowCount do
  begin
    if form1.StringGrid3.Cells[7,nn]='*' then begin DeleteRowQ(nn,StringGrid3) end;
  end;
     Form1.Button1.Click;
  end;

  //выбор лучшего результата
  if form1.RadioButton2.Checked=true then
  begin
 
         nl:=1 ;
         for kll:=1 to StringGrid3.RowCount do
         begin
         //nl:=nl+1;
         for kl:=nl to StringGrid3.RowCount do
         begin
         if form1.StringGrid3.Cells[0,kll] = form1.StringGrid3.Cells[0,kl] then
                   begin
                   if  form1.StringGrid3.Cells[1,kll] < form1.StringGrid3.Cells[1,kl] then form1.StringGrid3.Cells[7,kll]:='*';
                   end;
         end;
         end;


      for nn:=0 to  StringGrid3.RowCount do
  begin
    if form1.StringGrid3.Cells[7,nn]='*' then begin DeleteRowQ(nn,StringGrid3) end;
  end;
    for nn:=0 to  StringGrid3.RowCount do
  begin
    if form1.StringGrid3.Cells[7,nn]='*' then begin DeleteRowQ(nn,StringGrid3) end;
  end;
     Form1.Button1.Click;
   end;

///k2-k7
   Form1.Button3.Click;
      Form1.Button4.Click;
////
    Form1.Button5.Click;
    Form1.Button6.Click;

    end;

    except ShowMessage('Ошибка, что-то пошло не так') ; exit;
end;

end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  form1.RadioButton1.Checked:=true;
  form1.TabSheet3.TabVisible:=false;
  pageControl1.ActivePageindex := 0;
end;

procedure TForm1.Button1Click(Sender: TObject);
var n:integer;
k:extended;
begin
   begin
        for n:=1 to StringGrid3.RowCount-1 do
        form1.StringGrid3.Cells[6,n]:= floattostr((StrToFloatDef(form1.StringGrid3.Cells[1,n],0))/(StrToFloatDef(form1.StringGrid3.Cells[5,n],0)));
     end;

     begin
         for n:=1 to StringGrid3.RowCount-1 do
         form1.StringGrid3.Cells[7,n]:= floattostr(abs(StrToFloatDef(form1.StringGrid3.Cells[6,n],0)+((StrToFloatDef(form1.StringGrid3.Cells[5,n],0)-20)/20)-(StrToFloatDef(form1.StringGrid3.Cells[4,n],0)/20)-(StrToFloatDef(form1.StringGrid3.Cells[3,n],0)/20)));
     end;

     begin
         k:=0;
         for n:=1 to StringGrid3.RowCount-1 do
         begin
         k:=k+(StrToFloatDef(form1.StringGrid3.Cells[7,n],0));
         end;
         form1.StringGrid4.Cells[0,1]:=floattostr(k);
         form1.StringGrid4.Cells[0,0]:='K1 | V1';
     end;

end;

procedure TForm1.Button2Click(Sender: TObject);
var
Sort:boolean;
k,j,i,j1,jj1,zn,m,q:integer;
s:boolean ;

begin
for i:=1 to form1.StringGrid2.ColCount-1 do
begin


Sort := True;
  while Sort do begin
    Sort := False;
    j := 1;
    while j < StringGrid2.RowCount-1 do begin
      if StrToint(form1.StringGrid2.Cells[i,j]) > StrToint(form1.StringGrid2.Cells[i,j+1]) then begin
        k := StrToint(form1.StringGrid2.Cells[i,j]);
        form1.StringGrid2.Cells[i,j] := form1.StringGrid2.Cells[i,j+1];
        form1.StringGrid2.Cells[i,j+1] := inttostr(k);
        Sort := True;
      end;
      Inc(j);
    end;
  end;
end;

form1.StringGrid2.ColCount:= form1.StringGrid2.ColCount+8;
for m:=1 to form1.StringGrid2.ColCount-9 do
begin

for jj1:=1 to StringGrid2.RowCount do
begin
 zn:=0;
 for j1:=1 to StringGrid2.RowCount do
 begin
    if form1.StringGrid2.Cells[m,jj1] = form1.StringGrid2.Cells[m,j1] then
    zn:=zn+1;
 end;
    form1.StringGrid2.Cells[7+m,jj1]:=inttostr(zn);
end;
StringGrid2.Cells[7+m, 0]:='KK'+inttostr(m+1);
end;

 for i:=8 to form1.StringGrid2.ColCount-2 do

  begin
  q:=10;
  s:=false;
  while s = false do
  begin
       for m:=form1.StringGrid2.RowCount downto 1  do
       begin
       if strtoint(form1.StringGrid2.Cells[i,m])=q  then begin form1.StringGrid2.Cells[i,0]:=form1.StringGrid2.Cells[i-7,m]; s:=true; Break; end;
       end;

       q:=q-1;
  end;
  end;
  
end;

procedure TForm1.Button3Click(Sender: TObject);
var n:extended; i,k:integer;
begin


for k:=8 to StringGrid2.ColCount-2 do
begin

n:=0;
for i:=1 to StringGrid2.RowCount-1 do
begin
n:=(StrToFloat(form1.StringGrid2.Cells[k,i])-StrToFloat(form1.StringGrid2.Cells[k,0]))*(StrToFloat(form1.StringGrid2.Cells[k,i])/(form1.StringGrid2.RowCount-1)) ;
n:=n+1
end;
n:=abs(n);
n:=RoundTo(n,-2);
form1.StringGrid2.Cells[7,k-8]:=floattostr(n);
end;
end;

procedure TForm1.Button4Click(Sender: TObject);
var p:integer; zn:extended;
begin
for p:=1 to 6 do begin
form1.StringGrid4.Cells[p,0]:='K'+inttostr(p+1)+' | V'+inttostr(p+1);
end;

for p:=1 to 6 do begin
zn:= (((StrToFloat(form1.StringGrid2.Cells[7,p-1])/StringGrid2.RowCount-1)+StrToFloat(form1.StringGrid2.Cells[p+7,0]))/10)*100;
zn:=RoundTo(zn,-2);
form1.StringGrid4.Cells[p,1]:=floattostr(zn);
end;
end;

procedure TForm1.Button5Click(Sender: TObject);
var nk,i,k:integer; V:extended;
begin
  form1.StringGrid5.ColCount:=9;
  for k:=1 to 7 do
  begin
    nk:=0;
    for i:=1 to 7 do
    begin
    nk:=nk+strtoint(form1.StringGrid5.Cells[i,k]);
    end;
    form1.StringGrid5.Cells[8,k]:=inttostr(nk);
  end;

 nk:=0;
 for k:=1 to 7 do
 begin
   nk:=nk+strtoint(form1.StringGrid5.Cells[8,k]);
 end;
   form1.StringGrid5.Cells[8,0]:=inttostr(nk);

  for k:=1 to 7 do
  begin
   V:= strtoint(form1.StringGrid5.Cells[8,k])/strtoint(form1.StringGrid5.Cells[8,0]);
   V:=RoundTo(V,-2);
   form1.StringGrid4.Cells[k-1,2]:=floattostr(V);
  end;

end;
procedure TForm1.Button6Click(Sender: TObject);
var i:integer ;ZN:extended ;
begin

   begin
   zn:=0;
   for i:=0 to 6 do
   begin
     ZN:=ZN+(strtofloat(form1.StringGrid4.Cells[i,1])*strtofloat(form1.StringGrid4.Cells[i,2]));
   end;
   form1.Label1.Visible:=true;
   ZN:=RoundTo(ZN,-2);
   form1.Label1.Caption:='f(x)='+floattostr(ZN)+' %';
   end;
    form1.Button7.Click;
    form1.Label2.Visible:=true;
    form1.Label3.Visible:=true;
    form1.Label2.Caption:='Рекомендации к оценке курса';
    if (zn>0) and (zn<=35) then  form1.Label3.Caption:='удалить курс';
    if (zn>=70) and (zn<=100) then  form1.Label3.Caption:='оставить курс без изменений';
    if (zn>=36) and (zn<=69) then
    begin
      form1.Label4.Visible:=true;
      form1.Label5.Visible:=true;
    if form1.StringGrid6.Cells[1,0]='K1 | V1' then begin form1.Label3.Caption:='Доработать структуру курса'; end;
    if form1.StringGrid6.Cells[1,0]='K2 | V2' then begin form1.Label3.Caption:='Наладить взаимодействие обучаемого и преподавателя'; end;
    if form1.StringGrid6.Cells[1,0]='K3 | V3' then begin form1.Label3.Caption:='Обновить задания (проверить на соответствие) '; end;
    if form1.StringGrid6.Cells[1,0]='K4 | V4' then begin form1.Label3.Caption:='Добавить справочную информацию'; end;
    if form1.StringGrid6.Cells[1,0]='K5 | V5' then begin form1.Label3.Caption:='Вставить ссылки на источники'; end;
    if form1.StringGrid6.Cells[1,0]='K6 | V6' then begin form1.Label3.Caption:='Уменьшить сложность представленных заданий '; end;
    if form1.StringGrid6.Cells[1,0]='K7 | V7' then begin form1.Label3.Caption:='Систематизировать задания'; end;

    if form1.StringGrid6.Cells[1,1]='K1 | V1' then begin form1.Label4.Caption:='Доработать структуру курса'; end;
    if form1.StringGrid6.Cells[1,1]='K2 | V2' then begin form1.Label4.Caption:='Наладить взаимодействие обучаемого и преподавателя'; end;
    if form1.StringGrid6.Cells[1,1]='K3 | V3' then begin form1.Label4.Caption:='Обновить задания (проверить на соответствие) '; end;
    if form1.StringGrid6.Cells[1,1]='K4 | V4' then begin form1.Label4.Caption:='Добавить справочную информацию'; end;
    if form1.StringGrid6.Cells[1,1]='K5 | V5' then begin form1.Label4.Caption:='Вставить ссылки на источники'; end;
    if form1.StringGrid6.Cells[1,1]='K6 | V6' then begin form1.Label4.Caption:='Уменьшить сложность представленных заданий '; end;
    if form1.StringGrid6.Cells[1,1]='K7 | V7' then begin form1.Label4.Caption:='Систематизировать задания'; end;

    if form1.StringGrid6.Cells[1,2]='K1 | V1' then begin form1.Label5.Caption:='Доработать структуру курса'; end;
    if form1.StringGrid6.Cells[1,2]='K2 | V2' then begin form1.Label5.Caption:='Наладить взаимодействие обучаемого и преподавателя'; end;
    if form1.StringGrid6.Cells[1,2]='K3 | V3' then begin form1.Label5.Caption:='Обновить задания (проверить на соответствие) '; end;
    if form1.StringGrid6.Cells[1,2]='K4 | V4' then begin form1.Label5.Caption:='Добавить справочную информацию'; end;
    if form1.StringGrid6.Cells[1,2]='K5 | V5' then begin form1.Label5.Caption:='Вставить ссылки на источники'; end;
    if form1.StringGrid6.Cells[1,2]='K6 | V6' then begin form1.Label5.Caption:='Уменьшить сложность представленных заданий '; end;
    if form1.StringGrid6.Cells[1,2]='K7 | V7' then begin form1.Label5.Caption:='Систематизировать задания'; end;
    end;
end;

procedure TForm1.Button7Click(Sender: TObject);
var
Sort:boolean;
i,j:integer;
k: extended ;
s:boolean ;
n:string;
begin
for i:=0 to 6 do begin
form1.StringGrid6.Cells[0,i]:=form1.StringGrid4.Cells[i,1];
form1.StringGrid6.Cells[1,i]:=form1.StringGrid4.Cells[i,0];
end;
 i:=0;
Sort := True;
  while Sort do begin
    Sort := False;
        j := 1;
    while j < StringGrid6.RowCount-1 do begin
      if StrTofloat(form1.StringGrid6.Cells[i,j]) > StrTofloat(form1.StringGrid6.Cells[i,j+1]) then begin
        k := StrTofloat(form1.StringGrid6.Cells[i,j]);
        n := form1.StringGrid6.Cells[i+1,j];
        form1.StringGrid6.Cells[i,j] := form1.StringGrid6.Cells[i,j+1];
        form1.StringGrid6.Cells[i+1,j] := form1.StringGrid6.Cells[i+1,j+1];
        form1.StringGrid6.Cells[i,j+1] := floattostr(k);
        form1.StringGrid6.Cells[i+1,j+1] := n;
        Sort := True;
      end;
      Inc(j);
    end;
  end;
end;
end.
